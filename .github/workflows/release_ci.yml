name: Java Release CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the branch
        uses: actions/checkout@v3
      
      - name: Setup JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      
      - name: Analyze Project Metadata
        run: |
          echo "PROJECT_GROUPID=$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout)" >> $GITHUB_ENV
          echo "PROJECT_ARTIFACTID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV
          echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Check Release Version Number
        run: |
          [[ ${{ env.PROJECT_VERSION }} =~ ^([1-9]\d*|0)(\.(([1-9]\d*)|0)){2}$ ]] && exit 0 || exit 1

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package
      
      - name: Create Packages
        run: |
          echo ${{ env.PROJECT_VERSION }}
          mkdir staging && mkdir staging/data
          cp -R config staging/
          cp data/setdata staging/data/
          cp -R data/icons staging/data/
          cp ./CardCollectionManager*.jar staging

          cd staging
          zip -r ../Card-Collection-Manager-${{ env.PROJECT_VERSION }}.zip *
          tar -czvf ../Card-Collection-Manager-${{ env.PROJECT_VERSION }}.tar.gz *
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PROJECT_VERSION }}
          release_name: ${{ env.PROJECT_VERSION }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Card-Collection-Manager-${{ env.PROJECT_VERSION }}.zip
          asset_name: Card-Collection-Manager-${{ env.PROJECT_VERSION }}.zip
          asset_content_type: application/zip
          
      - name: Upload Release Asset TAR.GZ
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Card-Collection-Manager-${{ env.PROJECT_VERSION }}.tar.gz
          asset_name: Card-Collection-Manager-${{ env.PROJECT_VERSION }}.tar.gz
          asset_content_type: application/gzip
